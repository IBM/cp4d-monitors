{"version":3,"file":"component---src-pages-monitors-cp-4-d-watsonstudio-runtime-usage-manual-index-mdx-3e40fa1c0dee666c8367.js","mappings":"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","sources":["webpack://cloud-pak-deployer-monitors/./src/pages/monitors/cp4d-watsonstudio-runtime-usage/manual/index.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/alaimbock/cp4d-monitors/doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This page will go through all manual steps to deploy the Watson Studio Runtime monitor, and in addition to delete it. `}</p>\n    <p>{`The following pre-requisites are assumed:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`IBM Cloud Pak for Data is successfully deployed`}</li>\n      <li parentName=\"ul\">{`(Optional) Prometheus is configured. Refer to `}<a parentName=\"li\" {...{\n          \"href\": \"/cp4d-monitors/prometheus/\"\n        }}>{`setup OpenShift Prometheus and Cloud Pak for Data ServiceMonitor`}</a>{` for instructions`}</li>\n    </ul>\n    <p>{`This manual deployment will be based on:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Source of the Monitor is located in a Git Repository`}</li>\n      <li parentName=\"ul\">{`The Image will be pushed to the internal OpenShift Image Registry `}</li>\n    </ul>\n    <h2>{`Deploy Watson Studio Runtime`}</h2>\n    <h3>{`Build the Monitor Image and push to the registry`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\nexport OPENSHIFT_IMAGE_REGISTRY=image-registry.openshift-image-registry.svc:5000/\\${CP4D_PROJECT}\n\noc new-build https://github.com/IBM/cp4d-monitors \\\\\n --context-dir cp4d-watsonstudio-runtime-usage  \\\\\n --name cp4d-platform-watsonstudio-runtime-usage \\\\\n --to \\${OPENSHIFT_IMAGE_REGISTRY}/cp4d-platform-watsonstudio-runtime-usage:latest \\\\\n --to-docker=true \\\\\n --namespace \\${CP4D_PROJECT}\n`}</code></pre>\n    <p>{`Wait for the build to complete successfully`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc wait -n \\${CP4D_PROJECT} --for=condition=Complete build/cp4d-platform-watsonstudio-runtime-usage-1  --timeout=300s\n`}</code></pre>\n    <p>{`or to monitor the build process:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc logs -n \\${CP4D_PROJECT} build/cp4d-platform-watsonstudio-runtime-usage-1 -f\n`}</code></pre>\n    <p>{`Ensure the build finishes with the message `}<inlineCode parentName=\"p\">{`Push successful`}</inlineCode></p>\n    <h3>{`Create the Cloud Pak for Data zen-watchdog monitor configuration`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\nexport OPENSHIFT_IMAGE_REGISTRY=image-registry.openshift-image-registry.svc:5000/\\${CP4D_PROJECT}\nexport ICPDATA_ADDON_VERSION=$(oc get po -l component=zen-watcher -o jsonpath='{.items[0].metadata.annotations.productVersion}')\n\ncat << EOF | oc apply -f -\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: zen-alert-cp4d-platform-watsonstudio-runtime-usage-monitor-extension\n  labels:\n    app: zen-adv\n    icpdata_addon: 'true'\n    icpdata_addon_version: \\${ICPDATA_ADDON_VERSION}\n    release: zen-adv\ndata:\n  extensions: |\n    [\n      {\n        \"extension_point_id\": \"zen_alert_monitor\",\n        \"extension_name\": \"zen_alert_monitor_cp4d_watsonstudio_runtime_usage\",\n        \"display_name\": \"Watson Studio Runtime Usage\",\n        \"details\": {\n          \"name\": \"cp4dplatformwatsonstudioruntimeusage\",\n          \"image\": \"\\${OPENSHIFT_IMAGE_REGISTRY}/cp4d-platform-watsonstudio-runtime-usage:latest\",\n          \"schedule\": \"*/15 * * * *\",\n          \"event_types\": [\n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_total_count\",\n              \"simple_name\": \"Watson Studio Runtime Usage Total Count\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage Total Count\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage Total Count: <cp4d_watsonstudio_runtime_usage_total_count>\",\n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            },              \n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_project_count\",\n              \"simple_name\": \"Watson Studio Runtime Usage Project Count\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage Project Count\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage Project Count: <cp4d_watsonstudio_runtime_usage_project_count>\",                \n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            },\n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_project_cpu\",\n              \"simple_name\": \"Watson Studio Runtime Usage Project CPU\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage Project CPU\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage Project CPU: <cp4d_watsonstudio_runtime_usage_project_cpu_limit>\",                \n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            },\n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_project_memory\",\n              \"simple_name\": \"Watson Studio Runtime Usage Project Memory\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage Project Memory\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage Project Memory: <cp4d_watsonstudio_runtime_usage_project_memory_limit>\",\n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            },\n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_cpu\",\n              \"simple_name\": \"Watson Studio Runtime Usage CPU\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage CPU\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage CPU: <cp4d_watsonstudio_runtime_usage_cpu_limit>\",\n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            },\n            {\n              \"name\": \"cp4d_watsonstudio_runtime_usage_memory\",\n              \"simple_name\": \"Watson Studio Runtime Usage Memory\",\n              \"alert_type\": \"platform\",\n              \"short_description\": \"CP4D Watson Studio Runtime Usage Memory\",\n              \"long_description\": \"CP4D Watson Studio Runtime Usage Memory: <cp4d_watsonstudio_runtime_usage_memory_limit>\",\n              \"resolution\": \"none\",\n              \"reason_code_prefix\": \"80\"\n            }\n          ]\n        }\n      }\n    ]\nEOF\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Once the ConfigMap above is created, the zen-watcher pod will detect it. Please check the log of zen-watcher pod for details. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\nexport CP4D_PROJECT=<CP4D_PROJECT>\nexport ZEN_WATCHER_POD=$(oc get po -l component=zen-watcher -o custom-columns=CONTAINER:.metadata.name --no-headers)\noc logs \\${ZEN_WATCHER_POD}\n\ntime=\"2022-06-02 08:26:20\" level=info msg=processConfigData event=\"adding extensions from zen-alert-cp4d-platform-watsonstudio-runtime-usage-monitor-extension to the database\"\ntime=\"2022-06-02 08:26:20\" level=info msg=CleanUpStaleExtensions event=\"upgrade extensions: removing stale extensions from zen-alert-cp4d-platform-watsonstudio-runtime-usage-monitor-extension to the database\"\ntime=\"2022-06-02 08:26:20\" level=info msg=processExtensionHandler event=\"processing action: create for extension\" extension_name=zen_alert_monitor_cp4d_watsonstudio_runtime_usage\ntime=\"2022-06-02 08:26:20\" level=info msg=watchConfigMap event=\"config zen-alert-cp4d-platform-watsonstudio-runtime-usage-monitor-extension added\"\n`}</code></pre>\n    <h3>{`Wait for zen-watchdog to create cronjob`}</h3>\n    <p>{`Get the watchdog-alert-monitoring-cronjob cronjob details of Cloud Pak for Data`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\n\noc get cronjob watchdog-alert-monitoring-cronjob -n \\${CP4D_PROJECT}\n\nNAME                                SCHEDULE       SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nwatchdog-alert-monitoring-cronjob   */20 * * * *   False     0        3m46s           7d3h\n`}</code></pre>\n    <p>{`This cronjob must run in order for the Watson Studio Job cronjob to be created. Optionally the schedule can be changed to trigger its execution. The pod zen-watchdog can be monitored for any error messages:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\nexport CP4D_PROJECT=<CP4D_PROJECT>\nexport ZEN_WATCHDOG_POD=$(oc get po -n \\${CP4D_PROJECT} -l component=zen-watchdog -o custom-columns=CONTAINER:.metadata.name --no-headers)\n\noc logs -n \\${CP4D_PROJECT} \\${ZEN_WATCHDOG_POD} -f\n`}</code></pre>\n    <p>{`The new monitor cronjob is created:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc get cronjob -n \\${CP4D_PROJECT}\n\nNAME                                               SCHEDULE       SUSPEND   ACTIVE   LAST SCHEDULE   AGE\ncp4dplatformwatsonstudioruntimeusage-cronjob   */15 * * * *   False     0        <none>          63s\n`}</code></pre>\n    <p>{`Most monitors require access to the Cloud Pak for Data /user-home folder to cache information. To test whether this mount point is already present on the monitor use the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\nexport CP4D_CRONJOB=cp4dplatformwatsonstudioruntimeusage-cronjob\noc set volume -n \\${CP4D_PROJECT} cronjobs/\\${CP4D_CRONJOB} | grep \"mounted at /user-home\" | wc -l\n`}</code></pre>\n    <p>{`If the result is `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`, patch the cronjob using the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc patch cronjob -n \\${CP4D_PROJECT} \\${CP4D_CRONJOB} \\\\\n--type=json \\\\\n--patch '[{\"op\": \"add\",\"path\": \"/spec/jobTemplate/spec/template/spec/containers/0/volumeMounts/-\",\"value\": {\"name\": \"user-home-mount\",\"mountPath\": \"/user-home\"}}]'\n`}</code></pre>\n    <p>{`Based on the schedule the cronjob will be executed. This will create a pod, which can be monitored:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc logs -n \\${CP4D_PROJECT} <PODNAME>\n`}</code></pre>\n    <h2>{`Rebuilding the image`}</h2>\n    <p>{`When changes are applied to the monitor, restarting the Build Config will re-build and push the image to the image registry. No other changed are required. The next time the cronjob is executed, the new version of the monitor image will be used`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\nexport CP4D_CRONJOB=cp4dplatformwatsonstudioruntimeusage-cronjob\n\noc start-build -n \\${CP4D_PROJECT} cp4d-platform-watsonstudio-runtime-usage                                  \n`}</code></pre>\n    <p>{`Monitor the build using (use -2, -3 etc, based on the created build by the previous command):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc logs -n \\${CP4D_PROJECT} build/cp4d-platform-watsonstudio-runtime-usage-2 -f\n`}</code></pre>\n    <p>{`Patch the cronjob so it will Always pull the image to ensure it will fetch the latest version once triggered`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc patch cronjob -n \\${CP4D_PROJECT} \\${CP4D_CRONJOB} \\\\\n  --type=json \\\\\n  --patch '[{\"op\":\"replace\",\"path\":\"/spec/jobTemplate/spec/template/spec/containers/0/imagePullPolicy\",\"value\":\"Always\"}]'\n`}</code></pre>\n    <h2>{`Remove the Monitor`}</h2>\n    <p>{`Use the following commands to delete the monitor`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\nexport CP4D_CRONJOB=cp4d-platform-watsonstudio-runtime-usage-cronjob\noc delete bc -n \\${CP4D_PROJECT} cp4d-platform-watsonstudio-runtime-usage \noc delete cm -n \\${CP4D_PROJECT} zen-alert-cp4d-platform-watsonstudio-runtime-usage-monitor-extension \noc delete cronjob -n \\${CP4D_PROJECT} \\${CP4D_CRONJOB} \noc delete cm -n \\${CP4D_PROJECT} cp4d-monitor-configuration\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Please only delete the configmap cp4d-monitor-configuration if no other monitors are deployed. The configmap cp4d-monitor-configuration is generated by monitor. When monitor is deployed and scheduled to run, it will create the configmap with its default values.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"cp4d-job-last-refresh\" : \"0\"\n\"cp4d-job-refresh-interval-minutes\": \"120\"\n\"cp4d-project-last-refresh\": \"0\"\n\"cp4d-project-refresh-interval-minutes\": \"240\"\n\"cp4d-space-last-refresh\": \"0\"\n\"cp4d-space-refresh-interval-minutes\": \"120\"\n\"cp4d-wkc-last-refresh\": \"0\"\n\"cp4d-wkc-refresh-interval-minutes\": \"120\"\n`}</code></pre>\n    <h2>{`Reset Cloud Pak for Data metrics configuration and influxdb`}</h2>\n    <p>{`If, during development, the zen-watchdog is unable to process events because of an incorrect configuration or naming convention, using the following steps to reset the zen-watchdog and its influxdb`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP4D_PROJECT=<CP4D_PROJECT>\noc project \\${CP4D_PROJECT}\n\noc exec -it zen-metastoredb-0 /bin/bash\n\nmkdir /tmp/certs\ncp -Lr /certs/* /tmp/certs\ncd /tmp && chmod 0600 ./certs/*\ncd  /cockroach\n./cockroach sql --certs-dir=/tmp/certs/ --host=zen-metastoredb-0.zen-metastoredb\nuse zen;\n\ndrop table policies;\ndrop table products;\ndrop table monitors;\ndrop table monitor_events;\ndrop table event_types;\nexit\nexit\n\noc delete cronjob watchdog-alert-monitoring-cronjob watchdog-alert-monitoring-purge-cronjob zen-watchdog-cronjob diagnostics-cronjob\noc delete pod -l component=zen-watchdog\n`}</code></pre>\n    <p>{`Wait for the cronjobs to be re-created`}</p>\n    <p>{`Acquire the Password for influxdb, and copy it.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc extract secret/dsx-influxdb-auth --keys=influxdb-password --to=-\n`}</code></pre>\n    <p>{`Delete the influxdb entries`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc exec -it dsx-influxdb-0 bash\ninflux -ssl -unsafeSsl\nauth\n<enter>admin\n\n#Delete the events\n\nuse WATCHDOG;\ndrop measurement events;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}