"use strict";(self.webpackChunkcloud_pak_deployer_monitors=self.webpackChunkcloud_pak_deployer_monitors||[]).push([[5820],{7234:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return s},default:function(){return c}});var o=t(3366),a=(t(7294),t(4983)),r=t(7160),i=["components"],s={},p={_frontmatter:s},l=r.Z;function c(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)(l,Object.assign({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following steps can be used to manually configure Prometheus on the OpenShift cluster and forward the IBM Cloud Pak for Data zen-watchdog events to the OpenShift prometheus using a ServiceMonitor."),(0,a.kt)("p",null,"Refer to ",(0,a.kt)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.8/monitoring/enabling-monitoring-for-user-defined-projects.html"},"https://docs.openshift.com/container-platform/4.8/monitoring/enabling-monitoring-for-user-defined-projects.html")," for more information."),(0,a.kt)("h2",null,"OpenShift Prometheus"),(0,a.kt)("p",null,"OpenShift Prometheus can be configured with (persist data after pod restart) or without (loose data after pod restart) a storageclass. When using IBM Cloud, it is recommended to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"ibmc-vpc-block-retain-general-purpose")," block storageclass."),(0,a.kt)("h3",null,"Configure without persisting data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\nEOF\n")),(0,a.kt)("h3",null,"Configure with persisting data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\n    prometheusK8s: \n      volumeClaimTemplate:\n       spec:\n         storageClassName: ibmc-vpc-block-retain-general-purpose\n         volumeMode: Filesystem\n         resources:\n           requests:\n             storage: 40Gi  \nEOF  \n")),(0,a.kt)("p",null,"Using either methods, afterwards, wait for the Prometheus to completely start:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"oc wait -n openshift-monitoring --for=condition=Ready pod -l app=prometheus --timeout=300s\n")),(0,a.kt)("h3",null,"(Optional) Configure User Workload monitoring to use a storageclass"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: user-workload-monitoring-config\n  namespace: openshift-user-workload-monitoring\ndata:\n  config.yaml: |\n    prometheus:\n      volumeClaimTemplate:\n        spec:\n          storageClassName: ibmc-vpc-block-retain-general-purpose\n          volumeMode: Filesystem\n          resources:\n            requests:\n              storage: 40Gi\nEOF\n")),(0,a.kt)("h2",null,"Wait for User Workload monitoring to complete deployment"),(0,a.kt)("p",null,"Ensure the User Workload monitoring finishes its deployment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"oc wait -n openshift-user-workload-monitoring --for=condition=Ready pod --all --timeout=600s\n")),(0,a.kt)("h2",null,"Create IBM Cloud Pak for Data ServiceMonitor"),(0,a.kt)("p",null,"Now that Prometheus is setup completely, the IBM Cloud Pak for Data zen-watchdog can be configured to forward its events to OpenShift prometheus. This is implemented using a ServiceMonitor:"),(0,a.kt)("p",null,"Replace ","<","CP4D_PROJECT",">"," with the OpenShift project where IBM Cloud Pak for Data is deployed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  namespace: <CP4D_PROJECT>\n  labels:\n    k8s-app: zen-watchdog-service-monitor\n  name: zen-watchdog\nspec:\n  endpoints:\n    - interval: 30s\n      port: zenwatchdog-notls\n      scheme: http\n  selector:\n    matchLabels:\n      component: zen-watchdog\nEOF\n")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-prometheus-index-mdx-beaff5647c255db57f1a.js.map